{{>layout/header}}
<body>
    <h1 id="name">{{name}}</h1>
        <canvas id="graph" width="600" height="400"></canvas>
</body>
<footer>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.5.1/sockjs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js"></script>
    <script>
         /*var sock = null,
         stompClient = null;
       
        function connect(){
        sock = new SockJS("/ws");
        stompClient = Stomp.over(sock);    //stomp client 구성
        stompClient.connect({}, function(frame){
            console.log('connected stomp over sockjs');
            // subscribe message
            stompClient.subscribe('/topic/graph/'+name, graph);
        });
        }*/
        var lables_ = [];
        var chart;
        var name = document.getElementById('name').textContent;
        function getG(){
            $.ajax({
                url: '/graph/'+name,
                type: 'GET',
                success: function onData (data) {
                    change(data)
                },
                error: function onError (error) {
                    console.error(error);
                }
            });
        }
        $.ajax({
                url: '/graph/'+name,
                type: 'GET',
                success: function onData (data) {
                    graph(data)
                },
                error: function onError (error) {
                    console.error(error);
                }
            });
        function graph(payload){
            var g = payload;
            labels_ = [];
            for(let i = 0;i < g.length;i++){
                labels_.push(i+1);
            }
            const data = {
            labels: labels_,
            datasets: [{
                fill: true,
                label: 'price',
                backgroundColor: 'rgb(255, 99, 132)',
                borderColor: 'rgb(255, 99, 132)',
                data: g,
            }]
            };
            const config = {
                type: 'line',
                data,
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            suggestedMin: 0,
                            suggestedMax: 500
                            //ticks: {
                            //stepSize: 20 //<-- set this
                            //}
                        }
                    }
                }
            }
            chart = new Chart(
                document.getElementById('graph'),
                config
            );
        }
        function change(ndata){
            if(chart.data.labels.length < ndata.length){
                for(let i = chart.data.labels.length;i < ndata.length;i++){
                    chart.data.labels.push(i+1);
                }
            }
            chart.data.datasets[0].data = ndata;
            
            chart.update();
        }
        window.onload =function(){
            setInterval(getG, 5000)
        }
    </script>
</footer>
</html>